#include <iostream>
using namespace std;

int main(){
int a[2][2][2][2] = {
    {
    {{1, 2}, {3, 4}},
    {{5, 6}, {7, 8} }
    },
    {
    {{9,10}, {11, 12}},
    {{13, 14}, {15, 16}}
    }};


   cout<<"\narray elements are stored as:"<<endl;
   for(int i = 0; i < 2; ++i) {
      for (int j = 0; j < 2; ++j) {
         for(int k = 0; k < 2; ++k) {
            for(int l = 0; l < 2; ++l) {
               cout << "a[" << i << "][" << j << "][" << k << "] ["<< l <<"]= " << a[i][j][k][l] << endl;
            }
         }
      }
   }
   return 0;
}





    #include<iostream>
    using namespace std;
    int main()
    {

    int matrix[5][5],transpose[5][5];
    int i,j,rows,cols;


      cout<<"Enter Number of ROWS :";
      cin>>rows;

      cout<<"Enter Number Of COLS  :";
      cin>>cols;

      cout<<"Enter the elements  :";
       for( i=0;i<rows;i++){
           for( j=0;j<cols;j++)
           {
               cin>>matrix[i][j];
           }
          }

          cout<<"\n Matrix Entered\n";

       for( i=0;i<rows;i++){
           for( j=0;j<cols;j++)
           {
               cout<<matrix[i][j]<<"     ";
           }
           cout<<endl;
          }


    cout<<"\n\n\nTranspose of Entered Matrix\n";
       for( i=0;i<rows;i++){
           for( j=0;j<cols;j++)
           {
               transpose[j][i]=matrix[i][j];
           }
           cout<<endl;
          }


       for( i=0;i<cols;i++){
           for( j=0;j<rows;j++)
           {
               cout<<transpose[i][j]<<"    ";
           }
           cout<<endl;
          }

   return 0;
    }





/*Write a code that will create custom ciphers (encoded words) on strings.
Follow this procedure:
Write a function named encode that takes TWO parameters, a string s and an integer j.
Skip j number of characters in the string and increase the ASCII value of the next character by 2.
Perform step (ii) throughout the string.
Return the converted string from encode function*/


#include<iostream>
using namespace std;

int a;
int j;
string str;
int i;

string encode(string s, int j)
{
    a = s.length();
    for(i=j; i<a; i=i+j+1)
        {
            s[i]= s[i]+2;
        }
    return s;
}

int main()
{
    while(1)
    {
        cout<<"Write The Message That You Want To Be Encoded:"<<endl;
        getline(cin, str);
        cout<<endl;

        cout<<"What Number Would You Want To Make Your Message Encoded?"<<endl;
        cin >> j;
        cout<<endl;

        string NewString = encode(str,j);
        cout<<"The Encoded Message Now Is:";
        cout<<endl;
        cout<<NewString<<endl;

        break;
    }

    return 0;
}



/*Write a program with appropriate data structure to keep records of 10 students. Each student will have the following information:
Unique ID (you can use integer for this)
Number of Credits Completed
CGPA

Print all the student’s ID whose CGPA is more than 3.75.
Print all the student’s ID who has completed more than 50 credits.
*/

#include<iostream>
using namespace std;

struct student
{
    int id;
    int credit;
    float cgpa;
};

int main()
{
    cout<<"Enter The Details Of First 10 Students"<<endl;
    cout<<"In The Order Of"<<endl;
    cout<<"Their ID, The Number Of Credits They Completed and Their Present CGPA"<<endl;
    cout<<endl;

    student s[10];
    for(int i=0; i<10; i++)
    {
        cout<< "Student "<<i+1<<endl;
        cin>>s[i].id;
        cin>>s[i].credit;
        cin>>s[i].cgpa;
        cout<<endl;
    }

    cout<<endl;

    for(int i=0; i < 10;i++)
        {
            cout<<"Student "<<i+1<<"'s Details"<< endl;
            cout<<"                    ID: "<<s[i].id<<endl;
            cout<<"                    Credits Completed: "<<s[i].credit<<endl;
            cout<<"                    CGPA: "<<s[i].cgpa<<endl;
            cout<<endl;
        }


    cout<<endl;
    int i=0;
    while (i<10)
    {
        if(s[i].cgpa>3.75 && s[i].credit>50)
            {
                cout<<"Student "<<s[i].id<<"'s"<<" Credit Is:"<<" "<<s[i].credit<<endl;
                cout<<"And Their "<<" CGPA Is: "<<s[i].cgpa<<endl;
                i++;
            }
        break;
    }
    cout<<endl;
    cout<<endl;
}
